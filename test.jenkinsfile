pipeline {
    agent any

    tools {
        nodejs "testenvnode"
    }
  
    stages {
        stage('Cleanup') {
            steps {
                sh '''
                rm -rf *
                rm -rf .[!.]* ..?*
                '''
            }
        }
        stage('Fetch App Code') {
            steps {
                git branch: 'main', url: 'https://github.com/PXL-2TIN-DevOps-Resources/calculator-app-finished.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build Artifact') {
              steps {
                withCredentials([usernamePassword(credentialsId: 'myDockerCreds', 
                                passwordVariable: 'DOCKER_PASSWORD', 
                                usernameVariable: 'DOCKER_USERNAME')]) {
                    sh 'docker login -u ${env.DOCKER_USERNAME} -p {env.DOCKER_PASSWORD}'
                    sh '''
                    docker rmi $(docker images -q) --force || true
                    docker build -t anasra/calculator-app:latest .
                    docker image ls
                    '''
                }
            }
        }

        stage('Push Artifact') {
            steps{
                 sh 'docker push anasra/calculator-app:latest'
            }
        }

        stage('Deployment') {
            steps {
                sh 'docker rm -f $(docker ps -aq) || true'
                script {
                    def image = docker.image(env.DOCKER_IMAGE_NAME)
                    image.run('-p 3000:3000 --name calculator-app')
                }
            }
        }

        stage('Post Cleanup') {
            steps {
                sh '''
                sleep 120
                docker rm -f $(docker ps -aq) || true
                docker rmi $(docker images -q) || true
                rm -rf *
                rm -rf .[!.]* ..?*
                '''
            }
        }
    }
}
